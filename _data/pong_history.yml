history:
- css_code: "#pongCanvas {\n  background-color: #000;\n  border: 2px solid #FFF;\n\
    \  display: block;\n  margin: 20px auto;\n}\n\n.game-controls {\n  text-align:\
    \ center;\n  margin-top: 20px;\n}\n\n.game-controls button {\n  padding: 10px\
    \ 20px;\n  font-size: 1.2em;\n  cursor: pointer;\n  background-color: var(--link-col);\n\
    \  color: var(--page-col);\n  border: none;\n  border-radius: 5px;\n  transition:\
    \ background-color 0.3s ease;\n}\n\n.game-controls button:hover {\n  background-color:\
    \ var(--hover-col);\n}\n\n/* Dark mode adjustments for game controls */\nbody.dark-mode\
    \ .game-controls button {\n  background-color: var(--link-col);\n  color: var(--page-col);\n\
    }\n\nbody.dark-mode .game-controls button:hover {\n  background-color: var(--hover-col);\n\
    }\n\n.game-controls p {\n  font-size: 1.1em;\n  color: #FFF;\n}\n\n@media (max-width:\
    \ 600px) {\n  #pongCanvas {\n    width: 100%;\n    height: auto;\n  }\n}\n\n#pongCanvas\
    \ {\n  box-shadow: 0 0 10px rgba(255, 255, 255, 0.5);\n}"
  html_code: "---\nlayout: default\n---\n\n<main class=\"container-md\">\n  <div class=\"\
    row\">\n    <div class=\"col-xl-8 offset-xl-2 col-lg-10 offset-lg-1\">\n     \
    \ <h1 class=\"post-title\">Pong</h1>\n      <hr>\n      <canvas id=\"pongCanvas\"\
    \ width=\"600\" height=\"400\"></canvas>\n      <div class=\"game-controls\">\n\
    \        <p>Use Up/Down arrows to move the right paddle.</p>\n        <button\
    \ id=\"startGame\">Start Game</button>\n      </div>\n\n      <h2 class=\"mt-5\"\
    >Code Evolution History</h2>\n      <div class=\"code-history\" style=\"max-height:\
    \ 500px; overflow-y: scroll; border: 1px solid #ccc; padding: 10px;\">\n     \
    \   {% if site.data.pong_history.history %}\n          {% for entry in site.data.pong_history.history\
    \ reversed %}\n            <div class=\"history-entry mb-4\" style=\"border-bottom:\
    \ 1px dashed #eee; padding-bottom: 10px;\">\n              <h3>Update at {{ entry.timestamp\
    \ }}</h3>\n              <h4>JavaScript (pong.js)</h4>\n              <pre><code\
    \ class=\"language-javascript\">{{ entry.js_code | escape }}</code></pre>\n  \
    \            <h4>CSS (pong.css)</h4>\n              <pre><code class=\"language-css\"\
    >{{ entry.css_code | escape }}</code></pre>\n              <h4>HTML (_layouts/game.html)</h4>\n\
    \              <pre><code class=\"language-html\">{{ entry.html_code | escape\
    \ }}</code></pre>\n            </div>\n          {% endfor %}\n        {% else\
    \ %}\n          <p>No history available yet.</p>\n        {% endif %}\n      </div>\n\
    \n    </div>\n  </div>\n</main>\n\n<link rel=\"stylesheet\" href=\"{{ '/assets/css/pong.css'\
    \ | relative_url }}\">\n<script src=\"{{ '/assets/js/pong.js' | relative_url }}\"\
    ></script>"
  js_code: "const canvas = document.getElementById('pongCanvas');\nconst ctx = canvas.getContext('2d');\n\
    \nconst paddleWidth = 10;\nconst paddleHeight = 100;\nconst ballSize = 10;\n\n\
    let player1Y = canvas.height / 2 - paddleHeight / 2;\nlet player2Y = canvas.height\
    \ / 2 - paddleHeight / 2;\nlet ballX = canvas.width / 2;\nlet ballY = canvas.height\
    \ / 2;\nlet ballSpeedX = 5;\nlet ballSpeedY = 5;\n\nlet player1Score = 0;\nlet\
    \ player2Score = 0;\n\nlet gameRunning = true; // Game starts running by default\n\
    let gameMode = 'ai-vs-ai'; // Default mode is AI vs AI\n\nlet player2Speed = 0;\
    \ // Speed for player 2 when user controlled\n\ndocument.getElementById('startGame').addEventListener('click',\
    \ () => {\n    startGame('player-vs-ai');\n});\n\nfunction startGame(mode) {\n\
    \    gameRunning = true;\n    player1Score = 0;\n    player2Score = 0;\n    gameMode\
    \ = mode;\n    console.log('Game mode switched to:', gameMode);\n    resetBall();\n\
    }\n\nfunction drawRect(x, y, width, height, color) {\n    ctx.fillStyle = color;\n\
    \    ctx.fillRect(x, y, width, height);\n}\n\nfunction drawCircle(x, y, radius,\
    \ color) {\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.arc(x, y,\
    \ radius, 0, Math.PI * 2, true);\n    ctx.fill();\n}\n\nfunction resetBall() {\n\
    \    ballX = canvas.width / 2;\n    ballY = canvas.height / 2;\n    ballSpeedX\
    \ = (Math.random() > 0.5 ? 1 : -1) * 5; // Random starting direction\n    ballSpeedY\
    \ = (Math.random() * 10) - 5; // Random vertical speed\n}\n\nfunction update()\
    \ {\n    if (!gameRunning) return;\n\n    // AI for player 1 (left paddle) - always\
    \ AI controlled\n    player1Y += (ballY - (player1Y + paddleHeight / 2)) * 0.1;\n\
    \    player1Y = Math.max(0, Math.min(canvas.height - paddleHeight, player1Y));\n\
    \n    // Move ball\n    ballX += ballSpeedX;\n    ballY += ballSpeedY;\n\n   \
    \ // Ball collision with top/bottom walls\n    if (ballY < 0 || ballY > canvas.height\
    \ - ballSize) {\n        ballSpeedY = -ballSpeedY;\n    }\n\n    // Ball collision\
    \ with paddles\n    if (ballX < paddleWidth && ballY > player1Y && ballY < player1Y\
    \ + paddleHeight) {\n        ballSpeedX = -ballSpeedX;\n        let deltaY = ballY\
    \ - (player1Y + paddleHeight / 2);\n        ballSpeedY = deltaY * 0.35;\n    }\
    \ else if (ballX > canvas.width - paddleWidth - ballSize && ballY > player2Y &&\
    \ ballY < player2Y + paddleHeight) {\n        ballSpeedX = -ballSpeedX;\n    \
    \    let deltaY = ballY - (player2Y + paddleHeight / 2);\n        ballSpeedY =\
    \ deltaY * 0.35;\n    }\n\n    // Ball out of bounds (scoring)\n    if (ballX\
    \ < 0) {\n        player2Score++;\n        resetBall();\n    } else if (ballX\
    \ > canvas.width - ballSize) {\n        player1Score++;\n        resetBall();\n\
    \    }\n\n    // Player 2 control based on game mode\n    if (gameMode === 'ai-vs-ai')\
    \ {\n        // AI for player 2 (right paddle)\n        player2Y += (ballY - (player2Y\
    \ + paddleHeight / 2)) * 0.1;\n        player2Y = Math.max(0, Math.min(canvas.height\
    \ - paddleHeight, player2Y));\n    } else if (gameMode === 'player-vs-ai') {\n\
    \        // Player 2 (right paddle) controlled by user\n        player2Y += player2Speed;\n\
    \        player2Y = Math.max(0, Math.min(canvas.height - paddleHeight, player2Y));\n\
    \    }\n}\n\nfunction draw() {\n    // Background\n    drawRect(0, 0, canvas.width,\
    \ canvas.height, '#000');\n\n    // Paddles\n    drawRect(0, player1Y, paddleWidth,\
    \ paddleHeight, '#FFF');\n    drawRect(canvas.width - paddleWidth, player2Y, paddleWidth,\
    \ paddleHeight, '#FFF');\n\n    // Ball\n    drawCircle(ballX, ballY, ballSize,\
    \ '#FFF');\n\n    // Scores\n    ctx.font = '30px Arial';\n    ctx.fillStyle =\
    \ '#FFF';\n    ctx.fillText(player1Score, canvas.width / 4, 50);\n    ctx.fillText(player2Score,\
    \ canvas.width * 3 / 4, 50);\n    \n    // Center Line\n    ctx.strokeStyle =\
    \ '#FFF';\n    ctx.beginPath();\n    ctx.setLineDash([5, 15]);\n    ctx.moveTo(canvas.width\
    \ / 2, 0);\n    ctx.lineTo(canvas.width / 2, canvas.height);\n    ctx.stroke();\n\
    }\n\nfunction gameLoop() {\n    update();\n    draw();\n    if (gameRunning) {\n\
    \        requestAnimationFrame(gameLoop);\n    }\n}\n\ndocument.addEventListener('keydown',\
    \ (e) => {\n    if (gameMode === 'player-vs-ai') {\n        if (e.key === 'ArrowUp')\
    \ {\n            player2Speed = -5; // Move up\n        } else if (e.key === 'ArrowDown')\
    \ {\n            player2Speed = 5; // Move down\n        }\n    }\n});\n\ndocument.addEventListener('keyup',\
    \ (e) => {\n    if (e.key === 'ArrowUp' || e.key === 'ArrowDown') {\n        player2Speed\
    \ = 0; // Stop movement\n    }\n});\n\n// Initial game start\ngameLoop();"
  timestamp: '2025-07-11 04:53:52'
